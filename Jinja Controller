using System.Collections;
using System.Collections.Generic;
using UnityEngine;

//adding friction
public class JinjaController : MonoBehaviour {

    //field for acceleration
    [SerializeField]
    float acceleration = 0.1f;

    //field for friction
    [SerializeField]
    float friction = 0.9f;

    //field for gravity
    [SerializeField]
    float gravity = 0.02f;
    
    //field for jump
    [SerializeField]
    float jump = 0.3f;
    
    Vector3 velocity = Vector3.zero;

    // Start is called before the first frame update
    void Start()
    {
        
    }

    // Update is called once per frame
    void Update() {

        Transform tf = GetComponent<Transform>();

        //add friction to jinja 
        velocity *= friction;

        velocity = Vector3.down * gravity;

        // check if the arrow key is down, move jinja
        if (Input.GetKey(KeyCode.RightArrow)) {
            velocity += Vector3.right * acceleration; 
        }

        if (Input.GetKey(KeyCode.LeftArrow)) {
            velocity += Vector3.left * acceleration; 
        }

        //jummping
        if (Input.GetKeyDown(KeyCode.Space)) {
            RaycastHit2D hitPlatform = Physics2D.Raycast(tf.position, Vector3.down, 0.01f);
            

            if (hitPlatform.collider != null) {
                //jump!
                velocity.y = jump;
            }
        }

        tf.position += velocity;

        //Raycast to detect platforms
        Vector3 orgin = tf.position - velocity;

        Vector3 direction = velocity;

        float length = velocity.magnitude;

        //shoot a ray from Jinja's feet in the direction she's going
        RaycastHit2D hit = Physics2D.Raycast(orgin, direction, length);

        //did the ray hit a plftform & is Jinja falling?
        if (hit.collider != null && velocity.y < 0.01) {
            //place Jinja's poisition to above the platform
            tf.position = new Vector3(tf.position.x, hit.point.y, tf.position.z);

			//reset y velocity
            velocity.y = 0;
	 using System.Collections;
using System.Collections.Generic;
using UnityEngine;

//adding friction
public class JinjaController : MonoBehaviour {

    //field for acceleration
    [SerializeField]
    float acceleration = 0.1f;

    //field for friction
    [SerializeField]
    float friction = 0.9f;

    //field for gravity
    [SerializeField]
    float gravity = 0.02f;
    
    //field for jump
    [SerializeField]
    float jump = 0.3f;
    
    Vector3 velocity = Vector3.zero;

    // Start is called before the first frame update
    void Start()
    {
        
    }

    // Update is called once per frame
    void Update() {

        Transform tf = GetComponent<Transform>();

        //add friction to jinja 
        velocity *= friction;

        velocity = Vector3.down * gravity;

        // check if the arrow key is down, move jinja
        if (Input.GetKey(KeyCode.RightArrow)) {
            velocity += Vector3.right * acceleration; 
        }

        if (Input.GetKey(KeyCode.LeftArrow)) {
            velocity += Vector3.left * acceleration; 
        }

        //jummping

        tf.position += velocity;

        //Raycast to detect platforms
        Vector3 orgin = tf.position - velocity;

        Vector3 direction = velocity;

        float length = velocity.magnitude;

        //shoot a ray from Jinja's feet in the direction she's going
        RaycastHit2D hit = Physics2D.Raycast(orgin, direction, length);

        //did the ray hit a plftform & is Jinja falling?
        if (hit.collider != null && velocity.y < 0.01) {
            //place Jinja's poisition to above the platform
            tf.position = new Vector3(tf.position.x, hit.point.y, tf.position.z);

			//reset y velocity
            velocity.y = 0;
        }

        RaycastHit2D hitPlatform = Physics2D.Raycast(tf.position, Vector3.down, 0.01f); 

        while (hitPlatform.collider != null) {
                velocity.y = jump;
        }
    }
    
}
        }
    }
}
